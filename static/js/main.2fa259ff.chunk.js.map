{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","pages/PeoplePage.tsx","api/people.ts","pages/NotFoundPage.tsx","index.tsx"],"names":["Navbar","navItems","className","role","map","item","to","link","isActive","classNames","name","App","HomePage","Loader","PersonLink","person","slug","sex","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","match","useMatch","useEffect","fetchPeople","fetch","then","response","json","fetchedPeople","mappedPeople","mother","find","motherName","father","fatherName","length","params","born","died","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.2fa259ff.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\ntype NavigationItem = {\n  link: string,\n  name: string,\n};\n\ntype Props = {\n  navItems: NavigationItem[]\n};\n\nexport const Navbar: FC<Props> = ({ navItems }) => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          {navItems.map(item => (\n            <NavLink\n              key={item.link}\n              to={item.link}\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              {item.name}\n            </NavLink>\n          ))}\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar\n      navItems={[\n        { link: '/', name: 'Home' },\n        { link: 'people', name: 'People' },\n      ]}\n    />\n\n    <Outlet />\n  </div>\n);\n","export const HomePage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </main>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person.slug}`}\n      className={classNames(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Loader } from '../components/Loader';\nimport { getAll } from '../api/people';\nimport { Person } from '../types';\nimport { PersonLink } from '../components/PersonLink';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const match = useMatch('/people/:slug');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchPeople = async () => {\n      try {\n        const fetchedPeople = await getAll();\n        const mappedPeople = fetchedPeople.map(person => {\n          return {\n            ...person,\n            mother:\n              fetchedPeople.find(mother => mother.name === person.motherName),\n            father:\n              fetchedPeople.find(father => father.name === person.fatherName),\n          };\n        });\n\n        setPeople(mappedPeople);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {isLoading && (\n              <Loader />\n            )}\n\n            {isError && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            )}\n\n            {(people.length === 0 && !isError && !isLoading) && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n            {people.length > 0 && (\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {people.map(person => (\n                    <tr\n                      key={person.slug}\n                      data-cy=\"person\"\n                      className={classNames(\n                        {\n                          'has-background-warning':\n                          person.slug === match?.params.slug,\n                        },\n                      )}\n                    >\n                      <td>\n                        <PersonLink person={person} />\n                      </td>\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n                      <td>\n                        {person.mother ? (\n                          <PersonLink person={person.mother} />\n                        ) : (\n                          person.motherName || '-'\n                        )}\n                      </td>\n                      <td>\n                        {person.father ? (\n                          <PersonLink person={person.father} />\n                        ) : (\n                          person.fatherName || '-'\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { Person } from '../types';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getAll(): Promise<Person[]> {\n  return fetch(API_URL).then(response => response.json());\n}\n","export const NotFoundPage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}